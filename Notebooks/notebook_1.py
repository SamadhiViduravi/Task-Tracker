# -*- coding: utf-8 -*-
"""Notebook 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dOu5GqW7YxCPQfNh4FQmHtldn-SVkR5b

Author: Samadhi Vduravi Dissanayake
Peer Reviewer: Dulan Fernando
"""

import pandas as pd
data_set = pd.read_csv("/5DATA002W.2 Coursework Dataset(25012025v6.0).csv")
data_set.head(15)

data_set.info()

data_set.describe()

data_set.shape

data_set.isnull().sum()

data_set['Sex'].unique()

data_set['Age'].unique()

data_set.drop(columns=['Occupation'], inplace=True)

data_set.isnull().sum()

mean_age = data_set['Age'].mean()
data_set['Age'].fillna(mean_age, inplace=True)

data_set.isnull().sum()

mode_sex = data_set['Sex'].mode()[0]
data_set['Sex'].fillna(mode_sex, inplace=True)

data_set.isnull().sum()

MedianTumor_Size = data_set['Tumor_Size'].median()
data_set['Tumor_Size'].fillna(MedianTumor_Size, inplace=True)

data_set.isnull().sum()

median_Regional_Node_Examined = data_set['Regional_Node_Examined'].median()
data_set['Regional_Node_Examined'].fillna(median_Regional_Node_Examined, inplace=True)

data_set.isnull().sum()

import plotly.express as px

Survival_Months_Diagram1 = px.bar(data_set, x='Survival_Months')
Survival_Months_Diagram1.update_traces(marker_color='green', marker_line_color='green', marker_line_width=1.5)
Survival_Months_Diagram1.show()

Survival_Months_Diagram2= px.histogram(data_set, x = 'Survival_Months')
Survival_Months_Diagram2.update_traces(marker_color='green', marker_line_color='green', marker_line_width=1.5)
Survival_Months_Diagram2.show()

Survival_Months_Diagram3= px.box(data_set, x = 'Survival_Months')
Survival_Months_Diagram3.update_traces(marker_color='green', marker_line_color='green', marker_line_width=1.5)
Survival_Months_Diagram3.show()

def outliers_IQR(data_set):
  a = data_set.quantile(0.25)
  b = data_set.quantile(0.75)
  IQR= b - a
  outlier = data_set[((data_set < (a - 1.5 * IQR)) | (data_set > (b + 1.5 * IQR)))]
  return outlier

outlier = outliers_IQR(data_set['Survival_Months'])
print("Number of outliers: " + str(len(outlier)))
outlier # Display outliers

outlier_indices = [374,760,414,679,721,896,921,928,1042,1156,1702,1709,1731,1751,1893,2230,2410,3089,3474,3803]

#Drop the rows based on the indices
data_set.drop(data_set.index[outlier_indices], inplace=True)

outlier = outliers_IQR(data_set['Survival_Months'])
print("Number of outliers: " + str(len(outlier)))
outlier # Display outliers

outlier = outliers_IQR(data_set['Age'])
print("Number of outliers: " + str(len(outlier)))
outlier # Display outliers

All_outliers_indices = [142,212,522,842]

#Drop the rows based on the indices
data_set.drop(data_set.index[All_outliers_indices], inplace=True)

outlier = outliers_IQR(data_set['Age'])
print("Number of outliers: " + str(len(outlier)))
outlier # Display outliers

All_outliers_indices = [522,842]

#Drop the rows based on the indices
data_set.drop(index=All_outliers_indices, inplace=True)

outlier = outliers_IQR(data_set['Age'])
print("Number of outliers: " + str(len(outlier)))
outlier # Display outliers

outlier = outliers_IQR(data_set['Grade'])
print("Number of outliers: " + str(len(outlier)))
outlier # Display outliers

data_set.rename(columns = {'Reginol_Node_Positive': 'Regional_Node_Positive'},inplace=True)

data_set.isnull().sum()

data_set["Mortality_Status"].unique()

data_set.head(15)

data_set.info()

data_set["Age"] = data_set["Age"].fillna(data_set["Age"].median())

data_set.info()

data_set["Age"] = data_set["Age"].astype(int)

data_set.head(15)

data_set["Tumor_Size"] = data_set["Tumor_Size"].astype(int)

data_set.head(15)

data_set["Regional_Node_Examined"] = data_set["Regional_Node_Examined"].astype(int)

data_set.head(15)

classification_data = data_set.drop(columns=['Survival_Months'])

regression_data = data_set.drop(columns=['Mortality_Status'])

classification_data.to_csv("clssification_dataset.csv",index = False)

regression_data.to_csv("regression_data.csv", index = False)